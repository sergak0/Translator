<Program> ::= <Func><Program> | <Definition>;<Program> | <Func> | <Definition>;

<Func> ::= fn <Type> <Имя> (<Params>) <Block>

<Type> ::= <EType>[] | int | double | string

<Name> ::= <Letter>|<Name><Letter>|<Name><Digit>
<Params> ::= <Type><Name>{,<Params>}

<Block> ::= { {<Operator>} }
<Operator> ::= <for> | <while> | <if> | <return> | <Block> | <Exp>; | <Definition>; | <Enumeration>; 

<for> ::= for (<Definition>;<Exp>;<Exp>) <Block>

<Definition> ::= <Type><Имя>[=<Exp>]{,<Имя>[=<Exp>]}

<if> ::= if (<Exp>) <Block> [else <Block>]

<while> ::= while (<Exp>) <Block>

<return> ::= return <Exp>;

<Prior1> ::= (<Exp>) | <Name>(<Enumeration>) | <Name>() | <Name>{[<Exp>]} | <Name>

<Prior2> ::= ++<Prior2> | --<Prior2> | -<Prior2> | <Prior1> | <Const>

<Prior4> ::= <Prior3>*<Prior4> | <Prior3>/<Prior4> | <Prior3>%<Prior4> | <Prior3>

<Prior5> ::= <Prior4>+<Prior5> | <Prior4>-<Prior5> | <Prior4>

<Prior6> ::= <Prior5>><Prior6> | <Prior5><<Prior6> | <Prior5>>=<Prior6> | <Prior5><=<Prior6> | <Prior5>

<Prior7> ::= <Prior6>==<Prior7> | <Prior6>!=<Prior7> | <Prior6>

<Prior8> ::= <Prior7>&<Prior8> | <Prior7>|<Prior8> | <Prior7>^<Prior8> | <Prior7>

<Exp> ::= <Prior8>	

<Enumeration> ::= <Exp>{,<Exp>}
