
fn string get_s(int x) {
    if (x == 0) {
        return "";
    }
    string s;
    for (int i = 0; i < x; ++i) {
        s = s + "a";
    }
    return get_s(x - 1) + "#" + s;
}

fn int akkerman(int n, int m) {
    if (m == 0) {
        return n + 1;
    }
    if (n == 0) {
        return akkerman(1, m - 1);
    }
    return akkerman(akkerman(n - 1, m), m - 1);
}

string e = "b" + get_s(3) + "b";

fn int main() {
    int n;
    n = cast_int(input());
    int[] a;
    for (int i = 0; i < n; ++i) {
        a[i] = cast_int(input());
    }

    for (int i = 0; i < n; ++i) {
        for (int j = i + 1; j < n; ++j) {
            if (a[i] > a[j]) {
                int tmp = a[i];
                a[i] = a[j];
                a[j] = tmp;
            }
        }
    }

    for (int i = 0; i < n; ++i) {
        print(cast_string(a[i]) + " ");
    }

    int x, y;
    x = cast_int(input());
    y = cast_int(input());
    print(cast_string(akkerman(x, y)));
}
